(()=>{"use strict";const e=function(){const e=document.getElementById("main");e.textContent="",e.appendChild(function(){const e=document.createElement("div");e.classList.add("home-content");const n=document.createElement("div");n.classList.add("home-wrapper"),n.innerHTML='\n        <div id="introduction">\n            <p>Hello There!</p>\n            <p>I\'m <span style="color:aliceblue">Gergely Terpecz</span></p>\n            <div class="typewriter">\n                <p id="typewriter" class="text second-text"></p>\n            </div>\n        </div>\n        <img src="./images/frontend-dev.png" alt="frontend developer illustration">\n    ';const t=document.createElement("div");return t.classList.add("goals-wrapper"),t.innerHTML='\n        <h1> "If knowledge is <span>power</span>, then I\'d like to be <span> powerful." </span></h1>\n        <div id="goals">\n            <img src="./images/Road trip-bro.png" alt="Nature illustrations by Storyset">\n            <div id="myJourney">\n                <p>Ever since I\'ve started my studies from secondary school to <span>university</span>,\n                    I\'ve felt that <span>I am learning</span>, but learnt things <span>I was not interested\n                        in.</span> <br>\n                    I\'ve always had the path (which was <span>technical/IT related</span>), but only recently I was\n                    able to learn with full effort what <span>I love, programming.</span></p>\n                <p><span> My current long term goals are in order: </span><br> <span>Frontend </span> Developer <br>\n                    <span>Backend </span>Developer (then as Full Stack) <br> <span>DevOps</span> Engineer </p>\n                <p> If you are interested in <span>my full journey</span>, read more on the <span>"About"</span>\n                    tab. </p>\n            </div>\n        </div>\n    ',e.appendChild(n),e.appendChild(t),e}())},n=function(){const e=document.getElementById("main");e.textContent="",e.appendChild(function(){const e=document.createElement("div");e.id="about-wrapper";const n=document.createElement("div");n.id="whoami";const t=document.createElement("h1");t.style.textAlign="center",t.textContent="Who Am I?",n.appendChild(t);const a=document.createElement("p");a.innerHTML='Hi Everyone, I\'m <span>Gergely Terpecz</span>, located in Budapest, <span style="color:red">Hun</span><span style="color:white">ga</span><span style="color:green">ry</span>.\n    <br>\n    I\'m a <span>frontend developer.</span>',n.appendChild(a);const o=document.createElement("p");o.innerHTML="If I'm not coding, I <span>love to:</span>",n.appendChild(o);const i=document.createElement("ul");return["Learn new technologies","Take long walks with my family","Watching series, movies"].forEach((e=>{const n=document.createElement("li");n.textContent=e,i.appendChild(n)})),n.appendChild(i),e.appendChild(n),e}()),e.appendChild(function(){const e=document.createElement("div");e.id="techstack";const n=document.createElement("h1");n.textContent="My Tech Stack",e.appendChild(n);const t=document.createElement("div"),a=document.createElement("p");a.textContent="Programming/Scripting languages:",t.appendChild(a);const o=document.createElement("ul");["JavaScript with HTML5 & CSS3: For Frontend Development.","Python: Used for my Electrical Engineering Diploma Work in AI. Needs refreshment","Shell: Currently learning Shell scripting, getting the hang of it.","SQL: Made a course on Udemy with some base project, since I'm just learning backend, not used too much yet.","C: Used during University years in Electrical Engineering classes about Embedded Systems. Needs refreshment"].forEach((e=>{const n=document.createElement("li");n.textContent=e,o.appendChild(n)})),t.appendChild(o),e.appendChild(t);const i=document.createElement("div"),s=document.createElement("p");s.textContent="Tools I use:",i.appendChild(s);const c=document.createElement("ul");return["VSCode: For writing my code on my main desktop.","VIM: Not really a master of it, but I can write code in it when using Linux Virtual Machines. Also I can quit from it with :wq!"].forEach((e=>{const n=document.createElement("li");n.textContent=e,c.appendChild(n)})),i.appendChild(c),e.appendChild(i),e}())},t=function(){},a=function(){},o=function(){const o=function(){const e=document.createElement("nav"),n=document.createElement("ul");return n.classList.add("nav_links"),["Home","About","Experience","Resume"].forEach((e=>{const t=document.createElement("li"),a=document.createElement("a");a.id=e,a.href=`#${e}`,a.textContent=e,t.appendChild(a),n.appendChild(t)})),e.appendChild(n),e}(),i=function(){const e=document.createElement("main");return e.classList.add("main"),e.setAttribute("id","main"),e}(),s=function(){const e=document.createElement("footer"),n=document.createElement("ul");n.classList.add("nav_links"),["Developed by Gergely Terpecz","Copyright 2024 Â©"].forEach((e=>{const t=document.createElement("li");t.textContent=e,n.appendChild(t)}));const t=document.createElement("div");return t.classList.add("socials-wrapper"),t.innerHTML='\n        <li><a href="https://www.linkedin.com/in/terpeczgergely/" target="_blank">\n            <i class="fa-brands fa-linkedin"></i><span class="socials">LinkedIn</span>\n        </a></li>\n        <li>\n            <a href="https://github.com/terpeczgergely" target="_blank">\n                <i class="fa-brands fa-github"></i><span class="socials">GitHub</span>\n            </a>\n        </li>\n    ',e.appendChild(n),e.appendChild(t),e}();document.body.appendChild(o),document.body.appendChild(i),document.body.appendChild(s),function(){const o=[e,n,t,a];["Home","About","Experience","Resume"].forEach(((e,n)=>{const t=document.getElementById(e);t.addEventListener("click",o[n]),t.addEventListener("click",(()=>{window.scrollTo({top:0,behavior:"smooth"})}))}))}(),e()}();window.onload=o,window.addEventListener("scroll",(function(){const e=document.querySelector("nav");window.scrollY>50?e.classList.add("navbar-scrolled"):e.classList.remove("navbar-scrolled")}));let i=0,s=0;function c(e,n,t,a){const o=setInterval((function(){const c=e[i];s<c.length?(n.textContent+=c.charAt(s),s++):(clearInterval(o),setTimeout((function(){!function(e,n){let t=e.textContent.length-1;const a=setInterval((function(){t>=0?(e.textContent=e.textContent.slice(0,-1),t--):(clearInterval(a),r())}),n)}(n,t)}),a))}),t)}function r(){i=(i+1)%l.length,s=0,c(l,d,p,m)}const l=["A Frontend Developer","A Cloud Practitioner","An IT Enthusiast"],d=document.getElementById("typewriter"),p=100,m=2e3;c(l,d,p,m)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,